-- In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

-- How many orders were placed in January?
SELECT COUNT(*) FROM "JanSales"
WHERE orderdate >= '01/01/19';

-- OR

SELECT COUNT(orderid)
FROM "JanSales"
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- How many of those orders were for an iPhone?

SELECT COUNT(orderid)
FROM "JanSales"
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
AND Product = 'iPhone';

-- Select the customer account numbers for all the orders that were placed in February.

SELECT acctnum 
FROM "FebSales" 
INNER JOIN "customers"
ON customers.order_id = FebSales.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?

SELECT distinct product AS product_name, MIN(price) AS cheapest_product
FROM "JanSales" 
GROUP BY product, price
ORDER BY price ASC LIMIT 1;

-- What is the total revenue for each product sold in January?

SELECT SUM(Quantity) * price as total_revenue
FROM "JanSales"
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT SUM(Quantity), Product, SUM(Quantity) * price AS total_revenue
FROM "FebSales"
WHERE location = '548 Lincoln St, Seattle, WA 98101' 
GROUP BY Product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(customers.acctnum), AVG(price * Quantity)
FROM "FebSales"
LEFT JOIN "customers"
ON customers.order_id = FebSales.orderID
WHERE Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

--Trying different filtering techniques with this database

SELECT orderdate
FROM "FebSales"
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

SELECT location
FROM "FebSales"
WHERE orderdate = '02/18/19 01:35';

SELECT sum(quantity)
FROM "FebSales"
WHERE orderdate like '02/18/19%';

SELECT distinct Product
FROM "FebSales"
WHERE Product like '%Batteries%';

SELECT distinct Product, Price
FROM "FebSales"
WHERE Price like '%.99';

--List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT distinct Product, SUM(Quantity), location
FROM "FebSales"
WHERE location like '%Los Angeles%'
GROUP BY Product;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

SELECT distinct location, COUNT(orderID)
FROM "JanSales"
WHERE location LIKE '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2;

-- How many of each type of headphone were sold in February?

SELECT sum(Quantity) as quantity,
Product
FROM "FebSales" 
WHERE Product like '%Headphones%'
GROUP BY Product;

-- What was the average amount spent per account in February? 
SELECT AVG(price * Quantity), customers.acctnum
FROM "FebSales"
LEFT JOIN "customers"
ON customers.order_id = FebSales.orderID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY acctnum;


-- What was the average quantity of products purchased per account in February?
SELECT SUM(Quantity)/COUNT(customers.acctnum)
FROM "FebSales"
LEFT JOIN "customers"
ON customers.order_id = FebSales.orderID
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

-- Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT distinct Product, SUM(price * Quantity) as total_revenue
FROM "JanSales"
WHERE length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY Product
ORDER BY total_revenue DESC
LIMIT 1;



